# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CommonResponse {
  error: String
  ok: Boolean!
}

type Country {
  code: String!
  id: Int!
  krName: String!
  usName: String!
}

input CreateUserInput {
  email: String!
  name: String!
  nickname: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Exchange {
  id: Int!
  name: String!
  stocks: [Stock!]!
}

type LoginDataType {
  accessToken: String!
  refreshToken: String!
}

type LoginResponse {
  data: LoginDataType!
  error: String
  ok: Boolean!
}

type Mutation {
  login(email: String!, password: String!): LoginResponse!
  signUp(input: CreateUserInput!): CommonResponse!
}

type Query {
  search(query: String!): SearchStockResponse!
}

type SearchStock {
  enName: String!
  id: Int!
  krName: String!
  symbol: String!
}

type SearchStockResponse {
  data: [SearchStock!]!
  error: String
  ok: Boolean!
}

type Stock {
  country: Country
  createdAt: DateTime!
  enName: String!
  exchange: Exchange
  id: Int!
  krName: String!
  stockMeta: StockMeta
  symbol: String!
  type: StockType
  updatedAt: DateTime!
}

type StockMeta {
  createdAt: DateTime!
  dayHigh: Float!
  dayLow: Float!
  id: Int!
  latest: Float!
  marketCap: Float
  open: Float!
  previousClose: Float!
  stock: Stock
  symbol: String!
  timestamp: Int!
  updatedAt: DateTime!
}

enum StockType {
  CRYPTO
  ETF
}

type Subscription {
  changeStockMeta(symbols: [String!]!): StockMeta!
}
