// Generated by https://quicktype.io

export interface NaverAboardStocks {
  pageSize: number;
  page: number;
  totalCount: number;
  stocks: NaverAboardStock[];
}

export interface NaverAboardStock {
  stockEndType: StockEndType;
  compareToPreviousPrice: CompareToPreviousPrice;
  stockExchangeType: StockExchangeType;
  reutersCode: string;
  symbolCode: string;
  stockName: string;
  stockNameEng: string;
  reutersIndustryCode: string;
  industryCodeType: IndustryCodeType;
  openPrice: string;
  closePrice: string;
  compareToPreviousClosePrice: string;
  fluctuationsRatio: string;
  executedVolume: null;
  accumulatedTradingVolume: string;
  accumulatedTradingValue: string;
  localTradedAt: string;
  marketValue: string;
  dividend: string;
  dividendPayAt: null | string;
  tradeStopType: CompareToPreviousPrice;
  stockEndUrl: string;
  delayTime: number;
  marketStatus: MarketStatus;
  exchangeOperatingTime: boolean;
}

export interface CompareToPreviousPrice {
  code: string;
  text: Text;
  name: CompareToPreviousPriceName;
}

export enum CompareToPreviousPriceName {
  Falling = 'FALLING',
  Rising = 'RISING',
  Trading = 'TRADING',
}

export enum Text {
  상승 = '상승',
  운영Trading = '운영.Trading',
  하락 = '하락',
}

export interface IndustryCodeType {
  code: string;
  industryGroupKor: string;
  name: string;
}

export enum MarketStatus {
  Close = 'CLOSE',
}

export enum StockEndType {
  Stock = 'stock',
}

export interface StockExchangeType {
  code: Code;
  zoneId: ZoneID;
  nationType: NationType;
  delayTime: number;
  startTime: string;
  endTime: string;
  closePriceSendTime: string;
  nameKor: NameKor;
  nameEng: NameEng;
  name: StockExchangeTypeName;
}

export enum Code {
  Nys = 'NYS',
}

export enum StockExchangeTypeName {
  Nyse = 'NYSE',
}

export enum NameEng {
  NewYorkStockExchange = 'New York Stock Exchange',
}

export enum NameKor {
  뉴욕거래소 = '뉴욕 거래소',
}

export enum NationType {
  Usa = 'USA',
}

export enum ZoneID {
  Est5Edt = 'EST5EDT',
}

// Generated by https://quicktype.io

export interface NaverDomesticStocks {
  stockListSortType: string;
  stockListCategoryType: string;
  stocks: DomesticStock[];
  totalCount: number;
  page: number;
  pageSize: number;
}

export interface DomesticStock {
  itemCode: string;
  reutersCode: string;
  stockName: string;
  sosok: string;
  closePrice: string;
  compareToPreviousClosePrice: string;
  compareToPreviousPrice: DomesticCompareToPreviousPrice;
  fluctuationsRatio: string;
  accumulatedTradingVolume: string;
  accumulatedTradingValue: string;
  marketValue: string;
  nav: Nav;
  threeMonthEarningRate: Nav;
  marketStatus: MarketStatus;
}

export interface DomesticCompareToPreviousPrice {
  code: string;
  text: DomesticText;
  name: DomesticName;
}

export enum DomesticName {
  Falling = 'FALLING',
  Rising = 'RISING',
  Unchanged = 'UNCHANGED',
}

export enum DomesticText {
  보합 = '보합',
  상승 = '상승',
  하락 = '하락',
}

export enum MarketStatus {
  Open = 'OPEN',
}

export enum Nav {
  NA = 'N/A',
}
